{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n    delayInput: document.querySelector(\"input[name='delay']\"),\n    checkboxState: document.querySelectorAll(\"input[name='state']\"),\n    submitForm: document.querySelector(\".form\") \n};\n\nlet delayTime = 0;\nrefs.delayInput.addEventListener(\"change\", () => {\n    delayTime = refs.delayInput.value;\n});\n\nlet state = [];\nconst checkboxArray = Array.from(refs.checkboxState);\ncheckboxArray.forEach(checkbox => {\n    checkbox.addEventListener(\"change\", onCheckbox);\n});\n\nfunction onCheckbox() {\n    state = checkboxArray.filter(checkbox => checkbox.checked).map(checkbox => checkbox.value);\n}\n\nrefs.submitForm.addEventListener(\"submit\", onSubmit); \nfunction onSubmit(event) {\n    event.preventDefault();\n    refs.delayInput.value = '';\n    checkboxArray.forEach(checkbox => {\n        checkbox.checked = false;\n    });\n\n    let selectedState = '';\n    let selectedDelayTime = 0;\n    if (state.includes('fulfilled')) {\n        selectedState = 'fulfilled';\n        selectedDelayTime = delayTime;\n    } else if (state.includes('rejected')) {\n        selectedState = 'rejected';\n        selectedDelayTime = delayTime;\n    }\n\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            if (selectedState === 'fulfilled') {\n                resolve(`✅ Fulfilled promise in ${selectedDelayTime}ms`);\n            } else if (selectedState === 'rejected') {\n                reject(`❌ Rejected promise in ${selectedDelayTime}ms`);\n            }\n        }, selectedDelayTime);\n    });\n        promise.then(message => {\n            iziToast.show({\n                message: message,\n                messageColor: '#fff',\n                backgroundColor: '#59a10d',\n                position: 'topRight',\n                progressBar: false,\n            });\n        }).catch(error => {\n            iziToast.show({\n                message: error,\n                messageColor: '#fff',\n                backgroundColor: '#ef4040',\n                position: 'topRight',\n                progressBar: false,\n            })\n        });\n}"],"names":["refs","delayTime","state","checkboxArray","checkbox","onCheckbox","onSubmit","event","selectedState","selectedDelayTime","resolve","reject","message","iziToast","error"],"mappings":"wIAGA,MAAMA,EAAO,CACT,WAAY,SAAS,cAAc,qBAAqB,EACxD,cAAe,SAAS,iBAAiB,qBAAqB,EAC9D,WAAY,SAAS,cAAc,OAAO,CAC9C,EAEA,IAAIC,EAAY,EAChBD,EAAK,WAAW,iBAAiB,SAAU,IAAM,CAC7CC,EAAYD,EAAK,WAAW,KAChC,CAAC,EAED,IAAIE,EAAQ,CAAA,EACZ,MAAMC,EAAgB,MAAM,KAAKH,EAAK,aAAa,EACnDG,EAAc,QAAQC,GAAY,CAC9BA,EAAS,iBAAiB,SAAUC,CAAU,CAClD,CAAC,EAED,SAASA,GAAa,CAClBH,EAAQC,EAAc,OAAOC,GAAYA,EAAS,OAAO,EAAE,IAAIA,GAAYA,EAAS,KAAK,CAC7F,CAEAJ,EAAK,WAAW,iBAAiB,SAAUM,CAAQ,EACnD,SAASA,EAASC,EAAO,CACrBA,EAAM,eAAc,EACpBP,EAAK,WAAW,MAAQ,GACxBG,EAAc,QAAQC,GAAY,CAC9BA,EAAS,QAAU,EAC3B,CAAK,EAED,IAAII,EAAgB,GAChBC,EAAoB,EACpBP,EAAM,SAAS,WAAW,GAC1BM,EAAgB,YAChBC,EAAoBR,GACbC,EAAM,SAAS,UAAU,IAChCM,EAAgB,WAChBC,EAAoBR,GAGR,IAAI,QAAQ,CAACS,EAASC,IAAW,CAC7C,WAAW,IAAM,CACTH,IAAkB,YAClBE,EAAQ,0BAA0BD,CAAiB,IAAI,EAChDD,IAAkB,YACzBG,EAAO,yBAAyBF,CAAiB,IAAI,CAE5D,EAAEA,CAAiB,CAC5B,CAAK,EACW,KAAKG,GAAW,CACpBC,EAAS,KAAK,CACV,QAASD,EACT,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,YAAa,EAC7B,CAAa,CACb,CAAS,EAAE,MAAME,GAAS,CACdD,EAAS,KAAK,CACV,QAASC,EACT,aAAc,OACd,gBAAiB,UACjB,SAAU,WACV,YAAa,EAC7B,CAAa,CACb,CAAS,CACT"}